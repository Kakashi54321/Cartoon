{
#include <bits/stdc++.h>
using namespace std;
//Position this line where user code will be pasted.
int main() {
	
	int t;
	cin >> t;
	
	while(t--){
	    
	    int v, e;
	    cin >> v >> e;
	    
	    vector<int> adj[v];
	    
	    for(int i =0;i<e;i++){
	        int u, v;
	        cin >> u >> v;
	        adj[u].push_back(v);
	    }
	    
	    cout << isCyclic(v, adj) << endl;
	    
	}
	
	return 0;
}
}
/*This is a function problem.You only need to complete the function given below*/
/*  Function to check if the given graph contains cycle
*   V: number of vertices
*   adj[]: representation of graph
*/
bool dfs(int s, vector<int> adj[], bool vis[], bool S[]){
    vis[s]=1;
    S[s]=1;
    for(auto x: adj[s]){
        if(!vis[x]){
            if(dfs(x,adj,vis,S)){
                return 1;
            }
        }
        if(S[x]){
            return 1;
        }
    }
    S[s]=0;
    return 0;
}

bool isCyclic(int V, vector<int> adj[])
{
    // Your code here
    bool vis[V],S[V];
    for(int i=0; i<V; i++){
        vis[i]=0;S[i]=0;
    }
    for(int i=0; i<V; i++){
        if(vis[i]==0){
            if(dfs(i,adj,vis,S)){
                return 1;
            }
        }
    }
    return 0;
}
