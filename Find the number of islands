{
#include <bits/stdc++.h>
using namespace std;
//Position this line where user code will be pasted.
int main() {
    
	int T;
	cin>>T;
	while(T--)
	{
		int N,M;
		cin>>N>>M;
		vector<int> A[N];
		for(int i=0;i<N;i++){
		    vector<int> temp(M);
		    A[i] = temp;
		    for(int j=0;j<M;j++){
		        cin>>A[i][j];
		    }
		}
		cout<<findIslands(A,N,M)<<endl;
	}
	return 0;
}
}
/*This is a function problem.You only need to complete the function given below*/
/*you are required to complete this method*/
/*  Function to find number of islands in the given graph
*   A[]: input array
*   N, M: Row and column of given matrix
*/
void remove(vector<int> A[], int i, int j, int N, int M){
    int n=N;
    int m=M;
    if(i <0||j<0)
    return ;
    if(i>=n||j>=m)
    return ;
    if(A[i][j]==0)
    return ;
    A[i][j]=0;
    remove(A,i-1,j-1,N,M);
    remove(A,i-1,j,N,M);
    remove(A,i-1,j+1,N,M);
    remove(A,i,j-1,N,M);
    remove(A,i,j+1,N,M);
    remove(A,i+1,j-1,N,M);
    remove(A,i+1,j,N,M);
    remove(A,i+1,j+1,N,M);
}
int findIslands(vector<int> A[], int N, int M)
{
    // Your code here
    int n=N;
  int m=M;
//   cout<<N<<' '<<M<<endl;
  if(n==0)
  return 0;
  int count =0;
  for(int i=0;i<n;i++)
  { for(int j=0;j<m;j++)
      { if(A[i][j]==1)
        { count++;
        remove(A,i,j,n,m);
        }
      }
   }
   return count;
}
