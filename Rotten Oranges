#include<bits/stdc++.h>
using namespace std;

bool check(int x, int y, int m, int n) {
	if(x<0 || y<0 || x>=n || y>=m) return false;
	return true;
}
int func(){
    int n;int m;
    cin>>n>>m;
    int mat[n][m];
    list<pair<int,int>>qu;
    int fresh=0;
    for(int i=0;i<n;i++)
    	for(int j=0;j<m;j++) {
    		cin>>mat[i][j];
    	if(mat[i][j]==2)
    		qu.push_back(make_pair(i,j));
    			if(mat[i][j]==1)
    		fresh++;
    	}
    
    
    int lvl=0;
    while(fresh and !qu.empty() ) {
    	lvl++;
    	int qucount=qu.size();
    	while(qucount--) {
    		pair<int, int >pr=qu.front();
    		qu.pop_front();
    		int x=pr.first;
    		int y=pr.second;
    		if(check(x+1,y,m,n) and mat[x+1][y]==1) {
    		    mat[x+1][y]=2;
    			fresh--;
    			qu.push_back(make_pair(x+1,y));
    		}
    		if(check(x-1,y,m,n) and mat[x-1][y]==1) {
    			mat[x-1][y]=2;
    			fresh--;
    			qu.push_back(make_pair(x-1,y));
    		}
    		if(check(x,y+1,m,n) and mat[x][y+1]==1) {
    			mat[x][y+1]=2;
    			fresh--;
    			qu.push_back(make_pair(x,y+1));
    		}
    		if(check(x,y-1,m,n) and mat[x][y-1]==1) {
    			mat[x][y-1]=2;
    			fresh--;
    			qu.push_back(make_pair(x,y-1));
    		}
    	}
    }
    
    if(fresh==0)return lvl;
    else return -1;
    
}
int main() {

int test;cin>>test;
while(test--){
    
    cout<<func()<<endl;
}

	return 0;
}
