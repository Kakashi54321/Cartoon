first find LCS of strings 
then n+m-lcs will give the answer


Recursive SOln:-
o(2^min(m+n))

int superSeq(char* X, char* Y, int m, int n) 
{ 
    if (!m) return n; 
    if (!n) return m; 
  
    if (X[m - 1] == Y[n - 1]) 
        return 1 + superSeq(X, Y, m - 1, n - 1); 
  
    return 1 + min(superSeq(X, Y, m - 1, n), 
                superSeq(X, Y, m, n - 1)); 
} 





o(mn)
int superSeq(char* X, char* Y, int m, int n) 
{ 
    int dp[m + 1][n + 1]; 
  
    // Fill table in bottom up manner 
    for (int i = 0; i <= m; i++) 
    { 
        for (int j = 0; j <= n; j++) 
        { 
        // Below steps follow above recurrence 
        if (!i) 
            dp[i][j] = j; 
        else if (!j) 
            dp[i][j] = i; 
        else if (X[i - 1] == Y[j - 1]) 
                dp[i][j] = 1 + dp[i - 1][j - 1]; 
        else
                dp[i][j] = 1 + min(dp[i - 1][j],  
                                  dp[i][j - 1]); 
        } 
    } 
  
    return dp[m][n]; 
} 
